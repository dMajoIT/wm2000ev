include "global.tbh"

const IOTHUB_INIT_SIGNATURE=&h1FD3
const IOTHUB_TOPIC_METHOD="$iothub/methods/POST/"
const IOTHUB_TOPIC_PROERTY_DESIRED="$iothub/twin/PATCH/properties/desired/"
const IOTHUB_TOPIC_PROERTY_REPORTED="$iothub/twin/PATCH/properties/reported/"
const IOTHUB_TOPIC_TWIN="$iothub/twin/"
const IOTHUB_TOPIC_STREAMS="$iothub/streams/POST/"
const IOTHUB_TOPIC_RESULT="$iothub/twin/res/"
const IOTHUB_API_VERSION="?api-version=2019-03-31"
const IOTHUB_MQTT_API_VERSION="?api-version=2018-06-30"
const TOPIC_TIMESTAMP="iothub-creation-time-utc="

dim iothub_telemetry(IOTHUB_TELEMETRY_NUM) as struct_iothub_telemetry
dim iothub_property(IOTHUB_PROPERTY_NUM) as struct_iothub_property
dim iothub_command(IOTHUB_COMMAND_NUM) as struct_iothub_command
dim iothub_state as en_iothub_states
dim iothub_interface as pl_sock_interfaces
dim iothub_rid as dword=0
dim iothub_sending_telemetry as no_yes = NO
dim device_bound_message_topic as string(64)
dim server_bound_message_topic as string
dim iothub_init_flag as word
dim iothub_num_of_suback as byte
dim iothub_dps_sock as byte
dim iothub_dps_server as string(64)=""
dim iothub_assigned_hub as string(64)=""
dim iothub_scope_id as string(16)
dim iothub_device_id as string(32)
dim iothub_primary_key as string(64)
dim iothub_sas_token as string
dim iothub_timer as byte=0
dim iothub_dps_authorization as string
dim iothub_current_url as string
dim iothub_current_json_key as string
dim iothub_current_json_value as string
dim iothub_http_buf as string
dim iothub_assigned_status as boolean

declare mqtt_sock_num as byte
declare function iothub_init() as ok_ng
declare sub iothub_debugprint(byref print_data as string)
declare function iothub_get_descriptor_field(line_end_pos as word, byref field_start_pos as word) as string
declare function iothub_generate_sas_token(byref resourceUri as string, byref signingKey as string, expiresInMins as word) as string
declare sub iothub_dps_device_provisioning()
declare sub iothub_dps_connect(byref target_ip as string)
declare sub iothub_http_reset()
declare sub iothub_http_request_complete()

function iothub_init() as ok_ng
	dim i as word
	dim s as string
	dim telemtry_index as byte=0
	dim property_index as byte=0
	dim command_index as byte=0
	dim item_type as string(1)
	dim field_start_pos, line_end as word
	dim pos as byte
	
	iothub_init=NG
	romfile.open(IOTHUB_DESCRIPTOR_FILE)
	if romfile.size=0 then
		#if IOTHUB_DEBUG_PRINT
			iothub_debugprint("ERROR: '"+IOTHUB_DESCRIPTOR_FILE+"' is not in your project or file is empty.")
		#endif
		exit function
	end if

	i=romfile.find(romfile.pointer,">>",1)
	while i<>0
		'we are now at the ">>" pointing at the beginning of one setting descriptor line
		romfile.pointer=i+2
		
		'find the end of this setting descriptor line (or the end of file)
		line_end=romfile.find(romfile.pointer,"\x0d",1)
		if line_end=0 then
			line_end=romfile.size+1
		end if
		
		'extract item name
		s=iothub_get_descriptor_field(line_end,field_start_pos)			
		if s="" then
			'missing item name field
			#if IOTHUB_DEBUG_PRINT
				iothub_debugprint("ERROR: missing name field.")
			#endif
			
			exit function
		end if
		
		if len(s)>IOTHUB_ITEM_NAME_LEN then
			#if IOTHUB_DEBUG_PRINT
				iothub_debugprint("ERROR: item name length is "+str(len(s))+", while you have 'IOTHUB_ITEM_NAME_LEN "+str(IOTHUB_ITEM_NAME_LEN)+"'.")
			#endif
			exit function
		end if
		
		item_type=iothub_get_descriptor_field(line_end,field_start_pos)
		select case item_type
		case "T":
			if telemtry_index<IOTHUB_TELEMETRY_NUM then
				iothub_telemetry(telemtry_index).name=s				
			else
				#if IOTHUB_DEBUG_PRINT
					iothub_debugprint("ERROR: telemtry exceed pre-defined number.")
				#endif
				exit function
			end if
		case "P":
			if property_index<IOTHUB_PROPERTY_NUM then
				iothub_property(property_index).name=s
			else
				#if IOTHUB_DEBUG_PRINT
					iothub_debugprint("ERROR: property exceed pre-defined number.")
				#endif
				exit function
			end if
			
		case "C":
			if command_index<IOTHUB_COMMAND_NUM then
				iothub_command(command_index).name=s
				
			else
				#if IOTHUB_DEBUG_PRINT
					iothub_debugprint("ERROR: command exceed pre-defined number.")
				#endif
				exit function
			end if
			
		case else
			
			#if IOTHUB_DEBUG_PRINT
				iothub_debugprint("ERROR: unknow item type.")
			#endif
			exit function		
		end select

		select case item_type
		case "T":
			iothub_telemetry(telemtry_index).value=""
			telemtry_index=telemtry_index+1				
		case "P":
			s=iothub_get_descriptor_field(line_end,field_start_pos)	
			pos=instr(1,s,",",1)
			if pos>0 then
				if right(s,len(s)-pos)="W" then
					iothub_property(property_index).writable=YES
				else
					iothub_property(property_index).writable=NO
				end if
				s=left(s,pos-1)
			end if
				
			if stg_find(s)>0 then
				iothub_property(property_index).stg_name=s
				property_index=property_index+1
			else
				#if IOTHUB_DEBUG_PRINT
					iothub_debugprint("ERROR: unknow setting "+s)
				#endif
				exit function			
			end if
			
		case "C":
			s=iothub_get_descriptor_field(line_end,field_start_pos)	
			iothub_command(command_index).addr=field_start_pos
			command_index=command_index+1
		case else:	
		end select
		i=romfile.find(romfile.pointer,">>",1)
	wend
	
	iothub_rid=0
	iothub_init_flag=IOTHUB_INIT_SIGNATURE
	iothub_init=OK	
end function

public sub iothub_start(byref device_id as string, byref scope_id as string, byref dps_url as string, byref symmetricKey as string, interface as pl_sock_interfaces)


	if device_id="" or scope_id="" or dps_url="" or symmetricKey="" then
		#if IOTHUB_DEBUG_PRINT
			iothub_debugprint("ERROR: iothub_start() invalid parameters")
		#endif
		exit sub
	end if
	iothub_init()
	iothub_device_id=device_id
	iothub_scope_id=scope_id
	iothub_dps_server=dps_url
	iothub_interface=interface
	iothub_primary_key=symmetricKey
	server_bound_message_topic="devices/"+iothub_device_id+"/messages/events/"
	device_bound_message_topic="devices/"+iothub_device_id+"/messages/devicebound/"
	iothub_state=EN_IOTHUB_NOT_CONNECTED
	
end sub

function iothub_get_url() as string
	iothub_get_url=iothub_current_url
end function
public sub iothub_on_connected()

	if iothub_init_flag<>IOTHUB_INIT_SIGNATURE then
		#if IOTHUB_DEBUG_PRINT
			iothub_debugprint("ERROR: iothub_init() wasn't used or failed")
		#endif
		exit sub
	end if

	mqtt_sub(device_bound_message_topic+"#",QOS_AT_MOST_ONCE)
	mqtt_sub(IOTHUB_TOPIC_METHOD+"#",QOS_AT_MOST_ONCE)
	mqtt_sub(IOTHUB_TOPIC_RESULT+"#",QOS_AT_MOST_ONCE)
	mqtt_sub(IOTHUB_TOPIC_PROERTY_DESIRED+"#",QOS_AT_MOST_ONCE)
	mqtt_sub(IOTHUB_TOPIC_STREAMS+"#",QOS_AT_MOST_ONCE)

	#if IOTHUB_DEBUG_PRINT
		iothub_debugprint("Server connected.")
	#endif
	iothub_state=EN_IOTHUB_CONNECTED
end sub

public sub iothub_on_disconnected()
	
	if iothub_init_flag<>IOTHUB_INIT_SIGNATURE then
		#if IOTHUB_DEBUG_PRINT
			iothub_debugprint("ERROR: iothub_init() wasn't used or failed")
		#endif
		exit sub
	end if
	#if IOTHUB_DEBUG_PRINT
		iothub_debugprint("Disconnected from server.")
	#endif
	iothub_state=EN_IOTHUB_NOT_CONNECTED
end sub

public sub iothub_proc_mqtt_msg(byref topic as string,byref data as string)
	dim topic_len as byte=len(IOTHUB_TOPIC_METHOD)
	dim pos1, pos2, pos3 as byte=0
	dim item_name as string
	dim value as string
	dim s as string
	dim rid as string
	dim i as byte
	dim c as byte=0
	
	if iothub_init_flag<>IOTHUB_INIT_SIGNATURE then
		#if IOTHUB_DEBUG_PRINT
			iothub_debugprint("ERROR: iothub_init() wasn't used or failed")
		#endif
		exit sub
	end if
	
	if instr(1,topic,IOTHUB_TOPIC_METHOD,1)>0 then
		pos1=instr(topic_len+1,topic,"/",1)
		item_name=mid(topic,topic_len+1,pos1-topic_len-1)
		#if IOTHUB_COMMAND_NUM>0
		for i=0 to IOTHUB_COMMAND_NUM-1
			if iothub_command(i).name=item_name then
				pos1=instr(topic_len+1,topic,"$rid=",1)
				rid=right(topic, len(topic)-pos1-4)
				iothub_command(i).rid=lval(rid)
				if iothub_command(i).rid > iothub_rid then
					iothub_rid=iothub_command(i).rid
				end if
				callback_iothub_command_triggered(item_name,data)
				#if IOTHUB_DEBUG_PRINT
					iothub_debugprint("Command: "+item_name+" Data: "+data)
				#endif				
				exit sub
			end if
		next i
		#endif
		exit sub
	end if
	
	#if IOTHUB_PROPERTY_NUM>0
	if instr(1, topic,IOTHUB_TOPIC_TWIN,1)>0 then
		#if IOTHUB_DEBUG_PRINT
			iothub_debugprint("Properties update: "+data)
		#endif		
		pos1=instr(1,data,"desired",1)
		do 
			pos2=instr(pos1,data,"{",1)
			pos3=instr(pos1,data,"}",1)
			if pos2>0 and pos2<pos3 then
				pos1=pos2+1
				c=c+1
			else
				if pos3>0 then
					c=c-1
					if c=0 then
						s=mid(data,pos1+1,pos3-pos1-1)
					end if
					pos1=pos3+1
				end if
			end if
			if pos2=0 and pos3=0 then
				c=0
			end if			
		loop while c>0

		pos1=1
		do 
			pos2=instr(pos1,s,":",1)
			if pos2>0 then
				item_name=mid(s,pos1,pos2-pos1-1)			
				pos3=instr(pos2,s,",",1)
				if pos3=0 then
					pos3=len(s)+1
				end if
				value=mid(s,pos2+1,pos3-pos2-1)
				
				
					for i =0 to IOTHUB_PROPERTY_NUM-1
						if iothub_property(i).name=item_name then
							if value<>stg_get(iothub_property(i).stg_name,0) then
								#if IOTHUB_DEBUG_PRINT
									iothub_debugprint("Remote value of \x22"+item_name+"\x22 was "+stg_get(iothub_property(i).stg_name,0)+" change to: "+value)
								#endif							
								pos1=instr(1,topic,"$rid=",1)
								if pos1>0 then
									rid=right(topic, len(topic)-pos1-4)
									iothub_rid=lval(rid)
								end if
								
								stg_set(iothub_property(i).stg_name,0,value)
								value="{\x22"+item_name+"\x22:"+value+"}"
								iothub_rid=iothub_rid+1
								mqtt_publish(IOTHUB_TOPIC_PROERTY_REPORTED+"?$rid="+str(iothub_rid),value,QOS_AT_MOST_ONCE)
							end if
						end if
					next i				
					pos1=pos3+1
				
			end if
		loop while pos2>0		
	end if
	#endif
end sub

public sub iothub_command_respond(byref command as string, byref returns as string, result as en_iothub_command_codes)
	dim i as byte
	dim topic as string

	if iothub_init_flag<>IOTHUB_INIT_SIGNATURE then
		#if IOTHUB_DEBUG_PRINT
			iothub_debugprint("ERROR: iothub_init() wasn't used or failed")
		#endif
		exit sub
	end if
	#if IOTHUB_COMMAND_NUM>0
	for i=0 to IOTHUB_COMMAND_NUM-1
		if iothub_command(i).name=command then
			if returns="" then
				returns="{}"
			end if
			topic="$iothub/methods/res/"+str(result)+"/?$rid="+str(iothub_command(i).rid)
			mqtt_publish(topic,returns,QOS_AT_MOST_ONCE)
		end if
	next i
	#endif
end sub

public sub iothub_update_telemetry(byref name as string, byref value as string)
	dim i as byte
	
	if iothub_init_flag<>IOTHUB_INIT_SIGNATURE then
		#if IOTHUB_DEBUG_PRINT
			iothub_debugprint("ERROR: iothub_init() wasn't used or failed")
		#endif
		exit sub
	end if
	
	for i=0 to IOTHUB_TELEMETRY_NUM-1
		if iothub_telemetry(i).name=name then
			iothub_telemetry(i).value=value
			iothub_telemetry(i).updated=YES
			exit sub
		end if
	next i
end sub

public sub iothub_send_telemetry(byref timestamp as string)
	dim i as byte
	dim s as string
	dim value as string
	dim attribute as string(IOTHUB_ITEM_NAME_LEN)
	dim pos as byte
	
	if iothub_init_flag<>IOTHUB_INIT_SIGNATURE then
		#if IOTHUB_DEBUG_PRINT
			iothub_debugprint("ERROR: iothub_init() wasn't used or failed")
		#endif
		exit sub
	end if

	s=""
	for i=0 to IOTHUB_TELEMETRY_NUM-1
		if iothub_telemetry(i).updated=YES then
			iothub_telemetry(i).updated=NO
			attribute=iothub_telemetry(i).name
			value=iothub_telemetry(i).value
			s=iothub_json_helper(s,attribute,value)
		end if
	next i
	
	if timestamp<>"" then
		pos=instr(1,server_bound_message_topic,TOPIC_TIMESTAMP,1)
		if pos>0 then
			server_bound_message_topic=left(server_bound_message_topic,pos-1)+TOPIC_TIMESTAMP+timestamp
		else
			server_bound_message_topic=server_bound_message_topic+TOPIC_TIMESTAMP+timestamp
		end if
	end if
	sock.num=mqtt_sock_num
	sock.notifysent(0)
	mqtt_publish(server_bound_message_topic,s,QOS_AT_MOST_ONCE)
	iothub_sending_telemetry=YES
end sub

public sub iothub_proc_timer()

	select case iothub_state
	case EN_IOTHUB_NOT_CONNECTED:
		iothub_device_lookup()			
	case EN_IOTHUB_NOT_PROVISIONED:
		iothub_dps_device_provisioning()
	end select				

end sub

function iothub_get_descriptor_field(line_end_pos as word, byref field_start_pos as word) as string
'line_end_pos is an INPUT parameter, field_start_pos RETURNS the field position 
	const FIELD_SEPARATOR="\x09"
	dim i as word
	
	do
		if romfile.pointer>=line_end_pos then
			'the field is missing
			iothub_get_descriptor_field=""
			field_start_pos=0
			exit function
		end if
		
		i=romfile.find(romfile.pointer,FIELD_SEPARATOR,1)
		field_start_pos=romfile.pointer
		if i=0 or i>line_end_pos then
			'no next field separator found on this line, so we assume the field goes to the end of the line
			i=line_end_pos
			iothub_get_descriptor_field=romfile.getdata(i-romfile.pointer)
			romfile.pointer=line_end_pos+1
		else
			iothub_get_descriptor_field=romfile.getdata(i-romfile.pointer)
			romfile.pointer=i+1
		end if
	loop while iothub_get_descriptor_field="" 		
end function

public function iothub_json_helper(byref original as string, byref attribute as string, byref value as string) as string
	if original="" then
		original="{}"
	end if
	
	while right(original,1)<>"}"
		original=left(original,len(original)-1)
	wend
		
	if original="{}" then
		if left(value,1)="{" and right(value,1)="}" then
			iothub_json_helper="{\x22"+attribute+"\x22:"+value+"}"
		else
			iothub_json_helper="{\x22"+attribute+"\x22:\x22"+value+"\x22}"
		end if
	else
		if left(value,1)="{" and right(value,1)="}" then
			iothub_json_helper=left(original,len(original)-1)+","+"\x22"+attribute+"\x22:"+value+"}"
		else
			iothub_json_helper=left(original,len(original)-1)+","+"\x22"+attribute+"\x22:\x22"+value+"\x22}"
		end if
	end if
end function

public sub iothub_mqtt_sub_ok()
	iothub_num_of_suback=iothub_num_of_suback+1
	if iothub_num_of_suback>4 then
		iothub_rid=iothub_rid+1
		mqtt_publish(IOTHUB_TOPIC_TWIN+"GET/?$rid="+str(iothub_rid),"{}",QOS_AT_MOST_ONCE)
	end if
end sub

public sub iothub_on_ip_otained()

	
end sub

public sub iothub_on_telemetry_sent()
	if iothub_sending_telemetry=NO or sock.num<>mqtt_sock_num then
		exit sub
	end if
	iothub_sending_telemetry=NO
	callback_on_telemetry_sent()
end sub

public sub iothub_dps_connect(byref target_ip as string)

	sock.num=iothub_dps_sock
	sock.tlsdeinit()
	if target_ip<>"" then
		sock.targetip=ddstr(target_ip)
	end if
	sock.targetinterface=iothub_interface
	romfile.open(IOTHUB_DPS_TLS_CER)
	sock.tlsinit(romfile.offset)  'check return state
	sock.rxclear()
	sock.txclear()	
	sock.connect()
	
end sub

sub iothub_device_lookup()

	if iothub_init_flag<>IOTHUB_INIT_SIGNATURE then
		exit sub
	end if
	iothub_current_url = "https://" + iothub_dps_server + "/" + iothub_scope_id+"/registrations/"+iothub_device_id+IOTHUB_API_VERSION
	iothub_http_reset()
	http_request(HTTP_POST, iothub_current_url, PL_SOCK_INTERFACE_WLN,"{registrationId: \x22"+iothub_device_id+"\x22}")
	iothub_state=EN_IOTHUB_DEVICE_LOOKUP	

end sub

sub iothub_dps_device_provisioning()
 
	if iothub_state<>EN_IOTHUB_PROVISIONING then
		iothub_state=EN_IOTHUB_PROVISIONING
		iothub_dps_authorization=iothub_generate_sas_token(iothub_scope_id+"%2Fregistrations%2F"+iothub_device_id, iothub_primary_key, 525600)
		iothub_current_url = "https://" + iothub_dps_server + "/" + iothub_scope_id+"/registrations/"+iothub_device_id+"/register"+IOTHUB_API_VERSION
		iothub_http_reset()
		http_request(HTTP_PUT, iothub_current_url, PL_SOCK_INTERFACE_WLN,"{registrationId: \x22"+iothub_device_id+"\x22}")	
	end if
	
end sub

public sub iothub_dns_answer_acquired(return_type as en_dns_return_type, byref return_string as string)
	if return_type=EN_DNS_RET_IP then
		iothub_dps_connect(return_string)
	end if
end sub

sub iot_send_headers()

  if http_request_item.url = iothub_current_url then
        http_send_headers("Content-Type","application/json")
		http_send_headers("Authorization", "SharedAccessSignature sr="+iothub_scope_id+"%2Fregistrations%2F"+iothub_device_id+"&sig="+iothub_dps_authorization)
    end if
	
end sub


sub iothub_mqtt_start()
	
	iothub_state=EN_IOTHUB_CONNECTED
	dim user_name as string=iothub_assigned_hub+"/"+iothub_device_id+"/"+IOTHUB_MQTT_API_VERSION	
	dim resourceUri as string= iothub_assigned_hub+"%2Fdevices%2F"+iothub_device_id
	iothub_sas_token="SharedAccessSignature sr="+iothub_assigned_hub+"%2Fdevices%2F"+iothub_device_id+"&sig="+iothub_generate_sas_token(resourceUri, iothub_primary_key, 525600)
	mqtt_start(PL_SOCK_INTERFACE_WLN,iothub_assigned_hub,8883,user_name,iothub_sas_token,iothub_device_id,true)

end sub

sub iothub_json_callback(byref key as string, byref value as string)
	select case iothub_state
	case EN_IOTHUB_DEVICE_LOOKUP:
		if key = "assignedHub" then
			iothub_assigned_hub=value
			callback_iothub_device_assigned(value)
		end if
		if key = "status" and value = "assigned" then
			iothub_assigned_status=true
		end if
		if key = "errorCode" and value  = "trackingId" then
			iothub_assigned_status=false
		end if
	case EN_IOTHUB_PROVISIONING:
		if key = "status" and value = "assigned" then
			iothub_assigned_status=true
		end if
	end select
end sub

function iothub_parse_http(data as string) as string
	iothub_parse_http = ""
	dim start_pos as byte = 0
	dim end_pos as byte = 0
	dim parsing as boolean = true
	dim segment_length as byte

	
	while parsing = true
		segment_length = 255 - len(iothub_http_buf)
		if segment_length > len(data) then
			segment_length = len(data)
		end if
		iothub_http_buf = iothub_http_buf + mid(data,1,segment_length)
		data = right(data,len(data) - segment_length)
		start_pos = instr(1,iothub_http_buf,"\x22",1)
		end_pos = instr(1,iothub_http_buf,"\x22",2)
		
		if end_pos <> 0 then
			dim item as string = mid(iothub_http_buf,start_pos + 1,end_pos - start_pos - 1)
			if iothub_current_json_key = "" then
				iothub_current_json_key = item
			else if iothub_current_json_value = "" then
				iothub_current_json_value = item
				iothub_json_callback(iothub_current_json_key, iothub_current_json_value)
				iothub_current_json_key = ""
				iothub_current_json_value = ""
			end if
		end if
		if end_pos <> 0 then
			iothub_http_buf = right(iothub_http_buf,len(iothub_http_buf) - end_pos)
		else
			parsing = false
		end if
		
	wend
	
end function

sub iot_header_arrival(header_type as string, header_value as string)

	if header_type = "Date" then
		callback_iothub_set_datetime(header_value)
	end if
	
end sub

sub iothub_http_request_complete()
	
	
	if http_request_item.url = iothub_current_url then
		select case iothub_state		
		case EN_IOTHUB_DEVICE_LOOKUP:
			if iothub_assigned_status=false then
				iothub_state=EN_IOTHUB_NOT_PROVISIONED
			end if
			if iothub_assigned_hub<>"" and iothub_assigned_status<>false then
				iothub_mqtt_start()
			end if	
		case EN_IOTHUB_PROVISIONING:
			iothub_state=EN_IOTHUB_NOT_CONNECTED
		end select
	end if
end sub

sub iot_content_arrival(data as string)
	
	if http_request_item.url = iothub_current_url then
		iothub_parse_http(data)
	end if

end sub

sub iothub_http_reset()
	iothub_http_buf = ""
	iothub_current_json_key = ""
	iothub_current_json_value = ""
	iothub_assigned_status = false
end sub

function iothub_generate_sas_token(byref resourceUri as string, byref signingKey as string, expiresInMins as word) as string
	dim key as string="key"
	dim message as string
	dim result as string=strgen(255,"A")
	dim ch as string(1)
	dim s as string
	dim daycounts,mincounts as word
	dim seconds as byte
	dim expires as dword
	dim i as byte
	
	rtc.getdata(daycounts,mincounts,seconds) 'rtc.getdata returns the elapse time since 2000, we need the elapse time since 1970

	expires=daycounts*24*60+mincounts+16302369+expiresInMins
	expires=expires*60+seconds
	
	message=resourceUri+"\x0A"+lstr(expires)
	base64_decode(signingKey,key)
	sock.tlsinit(0)
	hmac256(key,message,result)
	sock.tlsdeinit()
	

	for i=0 to len(result)/2-1
		ch=chr(val("&h"+mid(result,i*2+1,2)))
		s=s+ch
	next i
	base64_encode(s,len(s),result)
	
	iothub_generate_sas_token=""
	for i=1 to len(result)
		ch=mid(result,i,1)
		if ch="/" then
			iothub_generate_sas_token=iothub_generate_sas_token+"%2F"
		else
			if ch="=" then
				iothub_generate_sas_token=iothub_generate_sas_token+"%3D"
			else
				if ch="+" then
					iothub_generate_sas_token=iothub_generate_sas_token+"%2B"
				else
					iothub_generate_sas_token=iothub_generate_sas_token+ch
				end if
			end if
		end if
	next i
	iothub_generate_sas_token=iothub_generate_sas_token+"&se="+lstr(expires)

end function


#if IOTHUB_DEBUG_PRINT
	sub iothub_debugprint(byref print_data as string)
		sys.debugprint("IOTHUB> "+print_data+"\x0d\x0a")
	end sub
#endif	
